services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gil-bot-backend
    env_file:
      - ./backend/.env.example
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app # Mount local code for development changes
    depends_on:
      - mongo
    networks:
      - gil-network
    environment:
      - DEBUG=True
      - PYTHONUNBUFFERED=1 # Ensures logs aren't buffered

  mongo:
    image: mongo:latest
    container_name: gil-bot-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      # Variables to create the specific application user and database
      MONGO_INITDB_DATABASE: ${MONGODB_DB_NAME:-gil_whatsapp_bot}
      MONGO_INITDB_USERNAME: ${MONGO_USER:-user} # Use a distinct variable name if needed
      MONGO_INITDB_PASSWORD: ${MONGO_PASSWORD:-pass} # Use a distinct variable name if needed
    networks:
      - gil-network
  # Optional: Cloudflared service for exposing the backend securely
  # cloudflared:
  #   image: cloudflare/cloudflared:latest
  #   container_name: gil-bot-cloudflared
  #   env_file:
  #     - ./backend/.env # Make sure CLOUDFLARE_TOKEN is in this file
  #   restart: unless-stopped
  #   # Pass CLOUDFLARE_TOKEN directly to the command
  #   command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TOKEN}
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - gil-network
  # # in case of local, also run frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gil-bot-frontend
    ports:
      - "3000:3000"

    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - backend
    networks:
      - gil-network
volumes:
  mongo_data:


networks:
  gil-network:
    driver: bridge
