services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gil-bot-backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app # Mount local code for development changes
    depends_on:
      - mongo
    networks:
      - gil-network
    environment:
      - DEBUG=True
      - PYTHONUNBUFFERED=1 # Ensures logs aren't buffered
      # MongoDB connection (no auth for development)
      - MONGODB_HOST=mongo
      - MONGODB_PORT=27017
      - MONGODB_DB_NAME=gil_whatsapp_bot

  mongo:
    image: mongo:latest
    container_name: gil-bot-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro # Optional: for init scripts
    environment:
      # Note: MONGO_INITDB_* variables only work on first initialization (empty data directory)
      # For production, enable authentication and set these in .env:
      # MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      # MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: gil_whatsapp_bot
    networks:
      - gil-network
    # Allow connections from other containers
    command: mongod --bind_ip_all --noauth

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gil-bot-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - backend
    networks:
      - gil-network

volumes:
  mongo_data:
    driver: local
    # For production deployment on VM, you can specify the path:
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: /path/on/vm/to/mongo/data

networks:
  gil-network:
    driver: bridge
