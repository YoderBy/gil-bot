name: Build and Deploy Gil WhatsApp Bot

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-push:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to private registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: registry.yosefbyd.com
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}
          
      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            registry.yosefbyd.com/gil-bot-backend:latest
            registry.yosefbyd.com/gil-bot-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            registry.yosefbyd.com/gil-bot-frontend:latest
            registry.yosefbyd.com/gil-bot-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    env:
      SSH_USER: ${{ secrets.DEPLOY_USER }}
      SSH_HOST: ${{ secrets.DEPLOY_HOST }}
      SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      APP_PATH: /opt/gil-bot
      ENV_FILE_CONTENT: ${{ secrets.ENV_FILE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.SSH_KEY }}

      - name: Create app directory on server
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p $APP_PATH"

      - name: Copy docker-compose.prod.yml to server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.prod.yml $SSH_USER@$SSH_HOST:$APP_PATH/docker-compose.yml

      - name: Recreate .env on server
        run: |
          echo "Rewriting .env on server"
          echo "$ENV_FILE_CONTENT" | ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "cat > $APP_PATH/.env"

      - name: Pull & restart containers via docker compose
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "cd $APP_PATH && docker compose pull && docker compose up -d" 